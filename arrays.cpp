#include <iostream>
#include <string>
#include <limits>
#include "Header.h"

using namespace std;
using namespace ext;

const int SIZE = 10;

int main()
{
	int mas[SIZE];

	for (int i = 0; i < SIZE; ++i)
	{
		mas[i] = GetRandomValue(0, 10);
	}
	//Задание 1

	//Объявите массив для хранения 10-ти целочисленных элементов
	int mas1[10];
	//Объявите константный массив для хранения 20-ти вещественных элементов
	float mas2[20];
	//Объявите массив для хранения 2-х символьных элементов
	char mas3[2];
	/*Пусть есть массив объявленный следующим образом:*/
	int data[6] = { 2, 4, 8, 16, 32, 64 };
	/*Какой размер имеет данный массив?*/
	//24

	//Данные какого типа он хранит
	//целые числа

	//Чему равен элемент массива с индексом 0?
	//2

	//Чему равен элемент массива с индексом 3?
	//16

	//Какой индекс у элемента 8?
	//2

	//Какой индекс у элемента 32?
	//4

	//Присвойте первому элементу массива значение 1.
	data[0] = 1;
	//Утройте значение последнего элемента в массиве.
	data[5] *= 3;
	//Выведите элементы массива на экран через пробел.
	for (int i = 0; i <= 5; ++i)
	{
		cout << data[i] << " ";
	}
	cout << "" << endl;
	//Объявите массив для хранения 5-ти элеменов любого типа и проинизиализируете его с помощью списка инициализации

	//Выведите объявленный массив на экран.

	//Можно ли не указывать размер массива при его создании?
	//нет
	//Если можно, то продемострируйте это.

	//Пусть массив объявили следующим образом:
	int data2[5] = { 1, 2 };

	//Каков размер данного массива?
	//20

	//Чему равен элемент с индексов 1? 
	//2

	//Чему равен элемент с индексом 2?
	//0

	//Проверьте ответы с помощью дебаггера.

	//Выведите все элементы массива на экран.
	for (int j = 0; j <= 4; ++j)
	{
		cout << data2[j] << " ";
	}
	cout << "" << endl;
	//Пусть массив объявлен следующим образом:
	const char alpha[3] = { 'a', 'b', 'c' };
	//Каков размер данного массива?
	//3

	//Чему равен элемент с индексов 0? 
	//a

	//Чему равен индекс у элемента 'c'
	//2

	//Допустимы ли следующие выражения:
	//alpha[0];
	//допустимо
	//alpha[3];
	//недопустимо
	//alpha[1] = 'd';
	//недопустимо
	//alpha[1] = 'b';
	//недопустимо

	//Выведите все элементы массива на экран.	
	for (int h = 0; h <= 4; ++h)
	{
		cout << alpha [h] << " ";
	}
	cout << "" << endl;
	cout << "" << endl;
	cout << "" << endl;
	cout << "" << endl;
	cout << "#2" << endl;
	//Задание 2
	//Объявите массив для хранения переменных типа int размером 20;
	int mas4[20];
	//Запишите в объявленный массив первые 20 натуральных чисел в порядке возрастания
	for (int k = 0; k <= 19; ++k)
	{
		mas4[k] = k + 1;
	}
	//Выведите все элементы массива на экран
	for (int l = 0; l <= 19; ++l)
	{
		cout << mas4[l] << " ";
	}
	cout << "" << endl;
	//Запишите в этот же массив первые 20 четных чисел в порядке возрастания
	for (int m = 1; m <= 20; ++m)
	{
		mas4[m-1] = 2*m;
	}
	//Выведите все элементы массива на экран
	for (int n = 0; n <= 19; ++n)
	{
		cout << mas4[n] << " ";
	}
	cout << "" << endl;
	//Запишите в этот же массив первые 20 степеней двойки (2^0, 2^1, ... , 2^19). Функцию pow не использовать
	mas4[0] = 1;
	for (int o = 1; o <= 19; ++o)
	{
		mas4[o] = 2 * mas4[o - 1];
	}
	//Выведите все элементы массива на экран по 5 элементов в одной строке
	for (int r = 0; r <= 3; ++r)
	{
		for (int p = 0 + 5 * r; p <= 4 + 5 *r; ++p)
		{
			cout << mas4[p] << " ";
		}
		cout << "" << endl;
	}
	cout << "" << endl;
	//Занулите в предыдущем массивы все элементы с нечетным индексов (i = 1, 3, ..., 19);
	for (int s = 1; s <= 19; s += 2)
	{
		mas4[s] = 0;
	}
	//Выведите все элементы массива на экран по 5 элементов в одной строке
	for (int t = 0; t <= 3; ++t)
	{
		for (int u = 0 + 5 * t; u <= 4 + 5 * t; ++u)
		{
			cout << mas4[u] << " ";
		}
		cout << "" << endl;
	}
	cout << "" << endl;
	cout << "" << endl;
	cout << "" << endl;
	cout << "#3" << endl;
	/* Задание 3
	При выполнении дальнейших заданий для заполнения массива случайными числами использовать функцию ext::GetRandomValue из Extention.hpp
	Например:
	int data[10];
	for(int i = 0; i < 10; ++i)
	{
	data[i] = ext::GetRandomValue(0, 100, true);
	}
	После выполнения данного кода массив data будет содержать 10 чисел в диапазоне от 0 до 100.*/

	//Сгенерируйте массив из 10 элементов в диапазоне от -10 до 10.
	int mas5[10];

	for (int dq = 0; dq <= 9; ++dq)
	{
		mas5[dq] = GetRandomValue(-10, 10);
	}
	//Выведите его на экран
		for (int ii = 0; ii <= 9; ++ii)
		{
			cout << mas5[ii] << " ";
		}
	cout << "" << endl;
	//Найдите наибольший элемент в массиве.
	int max;

	//Выведите на экран значение этого элемента и его индекс
	//(если максимальных элементов несколько вывести индекс любого).

	//Сгенерируйте массив из 100 элементов в диапазоне от -100 до 100.

	//Посчитайте и выведите на экран
	//Сумму всех элементов этого массива.

	//Количество элементов меньше 0, количество элементов равных 0, количество элементов больше 0

	//Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.

	//Вывести на экран
	//Элементы в записи которых встречается цифра 2

	//Элементы в записи которых не встречаются нечетные цифры
	                                                                                                                                                                                                        
	//Сложите поэлементно массивы из двух предыдущих пунктов, записав результаты сложения в новый массив

	//Выведите на экран получившийся массив по 10 элементов в строке.

	//Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.

	//Попросите пользователя ввести число из этого же диапазона.    

	/* Задание 4
	Сгенерируйте массив типа char из 100 элементов в диапазоне от a до z.
	Подсказка: функцию генерации рандомного элемента можно вызвать следующим образом:
	GetRandomValue('a','z');
	Выведите получившейся массив на экран в виде одной строки.
	Выведите на экран как часто каждая буква встречается в сгенерированном массиве.
	Выведите на экран вертикальную гистограмму рассчитанной частоты символов.
	Пример: "aabbdddz" для такой строки получится следующая гистограмма:
	|**
	|**
	|
	|***
	|
	|
	...
	|
	|
	|*
	На основании произведенных расчетов замените числовое представление на гистограмму, составленную из символов '*'
	*/

	/* Задание 5
	Пусть есть двумерный массив объявленный следующим образом:
	int data[3][2] = { {2, 4}, {8, 16}, {32, 64} };
	Чему равно количество строк в данном массиве?
	Чему равно количество элементов в каждой строке?
	Какой размер имеет данный массив?
	Данные какого типа он хранит?
	Как обратиться к элементу со значением 8?
	Как обратиться к элементу со значением 64?
	Присвойте первому элементу массива значение 1.
	Удвойте значение последнего элемента в массиве.
	Объявите двумерный массив размером 4х2 любого типа и проинизиализируете его с помощью списка инициализации
	Можно ли не указывать размер двумерного массива при его создании?
	Если можно, то продемострируйте это.
	Пусть массив объявили следующим образом:
	int data[][4] = { {1, 2}, {3,4,5} }
	Каков размер данного массива?
	Чему равен элемент data[0][0]? Чему равен элемент data[1][2]?
	Проверьте ответы с помощью дебагера.
	Увеличьте в два раза каждый элемент в данном массиве.
	Выведите все элементы массива на экран.
	Использовать циклы for
	*/

	/* Задание 6
	Сгенерируйте двумерный массив размером 10x10.
	Заполните его случайными значениями от 0 до 100
	Найдите и выведите на экран:
	Сгенерированный массив
	Сумму всех элементов массива
	Количество всех четных элементов.
	Максимальный и минимальный элементы массива вместе с их индексами
	*/

	/* Дополнительное задание
	На вход подается строка, описывающая ситуацию на поле в игре "Крестики-нолики".
	На ее основании необходимо заполнить двумерный массив char field[3][3],
	и, проаназилировав его, вывести победителя или Draw,
	если выигрышной последовательности нет ни у одного, либо есть у обоих.
	Тестовые данные				Ожидаемый результат
	XXX OO. ...					Winner is X
	OXO XO. .XO					Draw
	OXO XOX OX.					Draw
	XOX OXO OXO					Draw
	... ... ...					Draw
	XXX OOO ...					Draw
	XOO XOO XX.					Winner is X
	.O. XO. XOX					Winner is O
	*/

}
