#include <iostream>
#include <limits>

using namespace std;

int main()
{
	/* Упражнение 1
* Дано целое трехзначное число. Найдите сумму его цифр.
* Тестовые данные			Ожидаемый результат
* 111						3
* 999						27
* 123						6
* 321						6
* 528						15
*/
	int a, h, d, o;
	cin >> a;
	h = a / 100;
	o = a % 10;
	d = (a / 10) % 10;
	cout << h + o + d << endl;
  
/*
* Упражнение 2
* Даны значения двух моментов времени, принадлежащих одним и тем же суткам: часы, минуты и секунды для каждого из моментов времени.
* Известно, что второй момент времени наступил не раньше первого.
* Определите, сколько секунд прошло между двумя моментами времени.
* Тестовые данные			Ожидаемый резульат
* 1 1 1 2 2 2				3661
* 2 20 20 3 20 20			3600
* 23 30 00 23 59 59			1799
*/
	int h1, h2, m1, m2, s1, s2;
	cin >> h1;
	cin >> m1;
	cin >> s1;
	cin >> h2;
	cin >> m2;
	cin >> s2;
	cout << (h2 - h1) * 3600 + (m2 - m1) * 60 + (s2 - s1) << endl;

/* Упражнение 3
Посчитать Юлианскую дату
Пользователь вводит дату в формате день, месяц, год
Вывести в консоль рассчитанную Юлианскую дату
https://ru.wikipedia.org/wiki/%D0%AE%D0%BB%D0%B8%D0%B0%D0%BD%D1%81%D0%BA%D0%B0%D1%8F_%D0%B4%D0%B0%D1%82%D0%B0
раздел "Вычисление номера юлианского дня (JDN) по дате григорианского календаря"
Тестовые данные				Ожидаемый результат
1 12 2018					    2458454
1 1 2018					    2458120
1 6 2000					    2451697
21 12 2012					  2456283
*/
	int year, month, day, g, y2, month2, res;
	cin >> day;
	cin >> month;
	cin >> year;
	g = (14 - month)/12;
	y2 = year + 4800 - g;
	month2 = month + 12 * g - 3;
	res = day + ((153 * month2 + 2) / 5) + 365 * y2 + (y2 / 4) - (y2 / 100) + (y2 / 400) - 32045;
	cout << res << endl;

/* Упражнение 4
* Электронные часы показывают время в формате h:mm:ss (от 0:00:00 до 23:59:59),
* то есть сначала записывается количество часов, потом обязательно двузначное количество минут,
* затем обязательно двузначное количество секунд.
* Количество минут и секунд при необходимости дополняются до двузначного числа нулями.
* Тестовые данные		Ожидаемый результат
* 10					      0:00:10
* 122					      0:02:02
* 1220					    0:20:20
* 12200					    3:23:20
* 86000					    23:53:20
*/
	int time, hour, min, sec;
	char z;
	cin >> time;
	hour = time / 3600;
	min = (time - hour * 3600)/60;
	sec = time - min * 60 - hour * 3600;
	z = ':';
	cout << hour
		<< z
		<< min
		<< z
		<< sec << endl;

/* Упражнение 5
* На вход дается натуральное число N. Выведите следующее за ним четное число
* Тестовые данные		Ожидаемый результат
* 5						6
* 6						8
* 0						2
* 111					112
* 112					114
*/
	int n, p;
	cin >> n;
	p = 2 - n % 2;
	cout << n + p << endl;

/* Упражнение 6
* Дано четырехзначное число. Определите, является ли его десятичная запись симметричной.
* Если число симметричное, то выведите 1, иначе выведите любое другое целое число.
* Число может иметь меньше четырех знаков, тогда нужно считать, что его десятичная запись дополняется слева незначащими нулями.
* Тестовые данные			Ожидаемый результат
* 2002						1
* 2018						не 1
* 42						  не 1
* 220						  1
* 9999						1
*/
	int f, e1, v1, e2, v2;
	cin >> f;
	e1 = f / 1000;
	v1 = f % 10;
	e2 = (f / 100) % 10;
	v2 = (f / 10) % 10;
	cout << 3 - (1 - (e1 - v1)) - (1 - (e2 - v2)) << endl;

/* Дополнительное упражнение (будет оцениваться отдельно)
* Улитка ползет по вертикальному шесту высотой H метров, поднимаясь за день на A метров, а за ночь спускаясь на B метров.
* На какой день улитка доползет до вершины шеста?
* Тестовые данные		Ожидаемый результат
*  H	A	B
* 10	3	2			8
* 11	4	2			5
* 80	7	3			20
*/

}
