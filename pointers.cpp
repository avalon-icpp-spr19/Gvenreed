#include <iostream>
#include <string>
#include <limits>
#include "Extention.h"

using namespace std;
using namespace ext;

const int SIZE = 10;

int main()
{
	setlocale(LC_ALL, "");
	cout << "#1" << endl;
	//Задание №1
	int val = 10;
	//выведите адрес переменной val
	cout << &val << endl;
	//создайте указатель для хранения адреса переменной val
	//сохраните адрес переменной val в созданный указатель
	int *ival = & val;
	//выведите значение переменной val, используя указатель
	cout << *ival << endl;
	//Пусть объявлены следующие переменные:
	unsigned int a = 5U;
	double b = 0.8;
	const float f = 0.5F;
	const long long ll = 123LL;
	//Объявите и проинициализируйте указатели на вышеобъявленные переменные.
	unsigned int *ia = &a;
	double *ib = &b;
	const float *i_f = &f;
	const long long *ill = &ll;
	//Какой размер имеют объявленные указатели? Проверьте с помощью оператора sizeof
	cout << sizeof(ia) << "; ";
	cout << sizeof(ib) << "; ";
	cout << sizeof(i_f) << "; ";
	cout << sizeof(ill) << "; ";
	cout << "" << endl;
	//С помощью объявленных указателей:
	//увеличьте значение переменной a на 1
	*ia += 1;
	//присвойте переменной b значение 0.25
	*ib = 0.25;
	//выведите удвоенное значение переменной f
	cout << *i_f * 2 << endl;
	//выведите посчитайте остаток от деления на 10 переменной ll
	cout << *ill % 10 << endl;
	cout << "" << endl;
	cout << "#2" << endl;
//	Задание №2
//	Что выведет на экран следующий код?
// - 1

//	Прокоментируйте каждую строку, запишите промежуточные значения переменных
	//#include <iostream>
	//using namespace std;
	//int main()
	//{
	//int t[4] = {8,4,2,1};
	//int *p1 = t + 2, *p2 = p1 - 1;
	//p1++;
	//cout << *p1 - t[p1 - p2] << endl;
	//}
	int data[] = {1,2,3,4,5};
	//Объявите указатель на первый элемент массива
	int *idata = &data[0];
	//С помощью цикла for и объвленного указателя выведите каждый элемент массива в консоль.
	for (int i = 0; i <= 4; ++i)
	{
		cout << *(idata + i) << "; ";
	}
	cout << "" << endl;
	//С помощью цикла for и объвленного указателя увеличьте каждый элемент массива в 2 раза
	//и посчитайте сумму получившихся элементов массива.
	//Выведите полученный результат.
	int sum = 0;
	for (int i = 0; i <= 4; ++i)
	{
		*(idata + i) = *(idata + i) * 2;
		sum += *(idata + i);
	}
	cout << sum << endl;
	cout << "" << endl;
	cout << "#3" << endl;
	//Заданий №3
	//1.	Сгенерировать массив из 20 рандомных элементов из диапазона [-100, 100].
	int mas[20];
	for (int i = 0; i <= 19; ++i)
	{
		mas [i] = GetRandomValue(-100, 100);
	}
	//2.	Объявите указатель на первый элемент массива.
	int *imas = &mas[0];
	//3.	С помощью цикла for и объявленного указателя выведите массив в консоль.
	for (int i = 0; i <= 19; ++i)
	{
		cout << *(imas + i) << "; ";
	}
	cout << "" << endl;
	//4.	Используя дополнительный указатель найдите максимальный элемент массива.
	//5.	Выведите его индекс и значение. (Для вывода индекса использовать арифметику указателей).
	int *iimas = &mas[0];
	for (int i = 0; i <= 19; ++i)
	{
		if (*(imas + i) > *iimas)
		{
			*iimas = *(imas + i);
		}
	}
	cout << *iimas << endl;
	cout << iimas << endl;
	cout << "" << endl;
 
	//При обходе массива использовать указатели, запрещено обращаться к элементам массива по индексам.
	cout << "" << endl;
	cout << "#4" << endl;
	//Задание №4
	//Пусть задан некоторый символьный массив, проинициализированный строковым литералом.
	//Например
	const char data2[] = "abcdefghijklmnopqrstuvwxyz";
	//Пользователь вводит с клавиатуры один символ.
	//Необходимо вывести позицию, на которой введенный пользователем символ встретился первый раз.
	//Если введенного символа в строке нет вывести -1.
	//Тестовые данные			Ожидаемый результат
	//d				4
	//z				26
	//!				-1
	char four;
	int ans = -1;
	cin >> four;
	for (int i = 0; i < 26; ++i)
	{
		if (data2[i] == four)
		{
			ans = i + 1;
			break;
		}
	}
	cout << ans << endl;
	cout << "" << endl;
	cout << "#5" << endl;
	//Задание №5
	//Написать программу, которая сравнивает две строки, которые вводит пользователь.
	//Сравнение реализовать посимвольно.
	//Если введенные строки равны, вывести 1, если строки не равны вывести 0.
	//Строки могут быть разных размеров. Размер введенной строки не может превышать 256 символов.
	//Строки, введенные пользователем можно получить следующим образом:

	char line[256];
	cin.getline(line, 256);

}
